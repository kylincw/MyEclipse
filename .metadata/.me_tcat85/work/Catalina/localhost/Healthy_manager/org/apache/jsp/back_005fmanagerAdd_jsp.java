/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2019-12-07 09:40:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class back_005fmanagerAdd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1575710483704L));
    _jspx_dependants.put("jar:file:/C:/Data/MyEclipse%202017%20CI/.metadata/.me_tcat85/webapps/Healthy_manager/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098682290000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/jquery-1.10.2.js\"></script>\r\n");
      out.write("\t\t<style type=\"text/css\">\r\n");
      out.write("table{width: 100%;}\r\n");
      out.write(".head{\r\n");
      out.write("padding-left:20px;\r\n");
      out.write("\tfont-size:18px;\r\n");
      out.write("\tfont-weight:bold;\r\n");
      out.write("\tcolor:#F63;\r\n");
      out.write("\theight:32px;\r\n");
      out.write("}\r\n");
      out.write(".lable {\r\n");
      out.write("\theight:34px;\r\n");
      out.write("\tfont-size:14px;\r\n");
      out.write("\tcolor:#666666;\r\n");
      out.write("\ttext-align:right;\r\n");
      out.write("\twidth: 20%;\r\n");
      out.write("}\r\n");
      out.write(".text {\r\n");
      out.write("font-size:16px;\r\n");
      out.write("\tmargin-left:10px;\r\n");
      out.write("\tborder-left:none;\r\n");
      out.write("\tborder-top:none;\r\n");
      out.write("\tborder-right:none;\r\n");
      out.write("\tborder-bottom:1px solid #999;\r\n");
      out.write("}\r\n");
      out.write(".infor {\r\n");
      out.write("\twidth:45%;\r\n");
      out.write("}\r\n");
      out.write(".font_error {\r\n");
      out.write("\tfont-size:12px;\r\n");
      out.write("\tcolor:#ff0000;\r\n");
      out.write("}\r\n");
      out.write(".font_true {\r\n");
      out.write("\tfont-size:12px;\r\n");
      out.write("\tcolor:#61b16a;\r\n");
      out.write("}\r\n");
      out.write("input.login_btn {\r\n");
      out.write("\tborder: 0px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tfont-size: 14px ;\r\n");
      out.write("\tmargin-left: 150px ;\r\n");
      out.write("\tpadding: 7px 18px ;\r\n");
      out.write("\ttext-decoration: none ;\r\n");
      out.write("\tbackground: none repeat scroll 0 0 #FF8500;\r\n");
      out.write("\tcolor: #FFFFFF;\r\n");
      out.write("\tfloat: left ;\r\n");
      out.write("}\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t<script>\"undefined\"==typeof CODE_LIVE&&(!function(e){var t={nonSecure:\"5635\",secure:\"5644\"},c={nonSecure:\"http://\",secure:\"https://\"},r={nonSecure:\"127.0.0.1\",secure:\"gapdebug.local.genuitec.com\"},n=\"https:\"===window.location.protocol?\"secure\":\"nonSecure\";script=e.createElement(\"script\"),script.type=\"text/javascript\",script.async=!0,script.src=c[n]+r[n]+\":\"+t[n]+\"/codelive-assets/bundle.js\",e.getElementsByTagName(\"head\")[0].appendChild(script)}(document),CODE_LIVE=!0);</script></head>\r\n");
      out.write("\t<body data-genuitec-lp-enabled=\"false\" data-genuitec-file-id=\"wc3-6\" data-genuitec-path=\"/Healthy_manager/WebRoot/back_managerAdd.jsp\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"head\" data-genuitec-lp-enabled=\"false\" data-genuitec-file-id=\"wc3-6\" data-genuitec-path=\"/Healthy_manager/WebRoot/back_managerAdd.jsp\">管理员添加：</div>\r\n");
      out.write("\t<form id=\"register\" method=\"post\" >\r\n");
      out.write("\t<table border=\"0\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td class=\"lable\">登录用户：</td>\r\n");
      out.write("\t<td><input type=\"text\" name=\"manager.name\" id=\"username\" class=\"text\"></td>\r\n");
      out.write("\t<td><div id=\"userinfor\"  class=\"infor\"></div></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td class=\"lable\">登录密码：</td>\r\n");
      out.write("\t<td><input type=\"password\" name=\"manager.password\" id=\"pwd\" class=\"text\"></td>\r\n");
      out.write("\t<td><div id=\"pwdinfor\"  class=\"infor\"></div></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td class=\"lable\">请再次输入密码：</td>\r\n");
      out.write("\t<td><input type=\"password\" id=\"repwd\" class=\"text\"></td>\r\n");
      out.write("\t<td><div id=\"repwdinfor\"  class=\"infor\"></div></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td colspan=\"3\"><input type=\"button\" id=\"register_button\" class=\"login_btn\" value=\"添加\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tvar flag1 = false;\r\n");
      out.write("\t\tvar flag2 = false;\r\n");
      out.write("\t\tvar flag3 = false;\r\n");
      out.write("\t\t\t\t\t$(\"#username\").blur(\r\n");
      out.write("\t\t\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar name = $(\"#username\").val();\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#userinfor\").removeClass();\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#userinfor\").addClass(\"font_error\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar reg = /^[A-Za-z0-9_]+$/;\r\n");
      out.write("\t\t\t\t\t\t\t\tif (name.length > 16 || name.length < 2) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$(\"#userinfor\").html(\"用户名长度必须为2—16位\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tflag1 = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tif (!reg.test(name)) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$(\"#userinfor\").html(\"用户名只能由字母、数字、下划线组成！\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tflag1 = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#userinfor\").html(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\"<img src='./images/icon04.gif'>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tflag1 = true;\r\n");
      out.write("\t\t\t\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$(\"#pwd\").blur(function() {\r\n");
      out.write("\t\t\t\t\t\tvar pwd = $(\"#pwd\").val();\r\n");
      out.write("\t\t\t\t\t\t$(\"#pwdinfor\").removeClass();\r\n");
      out.write("\t\t\t\t\t\t$(\"#pwdinfor\").addClass(\"font_error\");\r\n");
      out.write("\t\t\t\t\t\tvar pattern = /^[A-Za-z0-9_!@#$%^&*()]+$/;\r\n");
      out.write("\t\t\t\t\t\tif (pwd.length < 6) {\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#pwdinfor\").html(\"密码不能少于6位\");\r\n");
      out.write("\t\t\t\t\t\t\tflag2 = false;\r\n");
      out.write("\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (!pattern.test(pwd)) {\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#pwdinfor\").html(\"密码只能是字母、数子、特殊符号组成！\");\r\n");
      out.write("\t\t\t\t\t\t\tflag2 = false;\r\n");
      out.write("\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t$(\"#pwdinfor\").addClass(\"font_true\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#pwdinfor\").html(\"密码有效！\");\r\n");
      out.write("\t\t\t\t\t\tflag2 = true;\r\n");
      out.write("\t\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$(\"#repwd\").blur(\r\n");
      out.write("\t\t\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar pwd = $(\"#pwd\").val();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar repwd = $(\"#repwd\").val();\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#repwdinfor\").removeClass();\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#repwdinfor\").addClass(\"font_error\");\r\n");
      out.write("\t\t\t\t\t\t\t\tif (repwd == \"\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$(\"#repwdinfor\").html(\"请再输入一次您的密码！\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tflag3 = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tif (pwd != repwd) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$(\"#repwdinfor\").html(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\"两次输入的密码不一致，<br>请重新输入！\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tflag3 = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#repwdinfor\").html(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\"<img src='./images/icon04.gif'>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tflag3 = true;\r\n");
      out.write("\t\t\t\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t$(\"#register_button\").click(function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (flag1 && flag2 && flag3 ) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t$(\"#register\").attr(\"action\",\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/back/add_manager\").submit();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\talert(\"请填写有效信息！\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /back_managerAdd.jsp(6,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("url");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_c_005fset_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_c_005fset_005f0.doInitBody();
        }
        do {
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          int evalDoAfterBody = _jspx_th_c_005fset_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f0);
    }
    return false;
  }
}
